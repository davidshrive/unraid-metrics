#
# Set Vars
#
DBURL=http://192.168.0.110:8086
DBNAME=telegraf
DEVICE="UNRAID"
CURDATE=`date +%s`

# HD Space

# Gets the stats for boot, disk#, cache, user
#
df | grep "mnt/\|/boot\|docker" | grep -v "user0\|containers" | sed 's/\/mnt\///g' | sed 's/%//g' | sed 's/\/var\/lib\///g'| sed 's/\///g' | while read MOUNT TOTAL USED FREE UTILIZATION DISK
do
	if [ "${DISK}" = "user" ]; then
		DISK="array_total"
	fi
	curl -is -XPOST "$DBURL/write?db=$DBNAME" --data-binary "diskSpaceStats,Device=${DEVICE},Drive=${DISK} Free=${FREE},Used=${USED},Utilization=${UTILIZATION} ${CURDATE}000000000" >/dev/null 2>&1	
done

# HD Temp and Status

# Current array assignment.
# I could pull the automatically from /var/local/emhttp/disks.ini
# Parsing it wouldnt be that easy though.
#
# Added -n standby to the check so smartctl is not spinning up my drives
#
# Directly connected
DISK_ARRAY=( sdc sdb sdd sde )
DESCRIPTION=( rey-parity bb8-disk1 tie-fighter-disk2 x-wing-disk3 )
i=0
for DISK in "${DISK_ARRAY[@]}"
do
	smartctl -n standby -A /dev/$DISK | grep "Temperature_Celsius" | awk '{print $10}' | while read TEMP 
	do
		curl -is -XPOST "$DBURL/write?db=$DBNAME" --data-binary "diskTempStats,DEVICE=${DEVICE},DISK=${DESCRIPTION[$i]} Temperature=${TEMP} ${CURDATE}000000000" >/dev/null 2>&1
	done
	((i++))
done

# 3ware controller connected
DESCRIPTION=(  tbc-cache1 tbc-cache2 tbc-disk12 tbc-disk13 kylo-disk11 star-destroyer-disk5 speeder-disk6 phasma-disk10 stormtrooper-disk4 finn-disk9 poe-disk7 chewie-disk8 )
i=0
for DESCRIPTION in "${DESCRIPTION[@]}"
do
	smartctl -n standby -a /dev/twa0 -d 3ware,$i | grep "Temperature_Celsius" | awk '{print $10}' | head -1 | while read TEMP 
	do
		curl -is -XPOST "$DBURL/write?db=$DBNAME" --data-binary "diskTempStats,DEVICE=${DEVICE},DISK=${DESCRIPTION} Temperature=${TEMP} ${CURDATE}000000000" >/dev/null 2>&1
	done
	((i++))
done

# CPU and Motherboard Temperatures

TEMP=( CPU MB ) 

for TYPE in "${TEMP[@]}"
do
	CURTEMP=`sensors | grep $TYPE | awk '{print $3}' | tr -dc '0-9.'`
	curl -is -XPOST "$DBURL/write?db=$DBNAME" --data-binary "tempStats,DEVICE=${DEVICE},TYPE=${TYPE} Temperature=${CURTEMP} ${CURDATE}000000000" >/dev/null 2>&1
done

# Share Space

SHARES=( appdata backup cameras downloads isos private shared system virtual-machines )
for SHARE in "${SHARES[@]}"
do
	TIME=$(date +"%T")
	echo $TIME
	echo Checking size of share: $SHARE
	SIZE=`du -s /mnt/user/$SHARE/ | awk '{print $1}'`
	echo ${SIZE}
	curl -is -XPOST "$DBURL/write?db=$DBNAME" --data-binary "shareSize,DEVICE=${DEVICE},SHARE=${SHARE} Size=${SIZE} ${CURDATE}000000000" >/dev/null 2>&1
done
